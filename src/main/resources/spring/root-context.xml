<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
	 destroy-method="close">
	 	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
	 	<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
	 	<property name="username" value="ActivePlus"/>
	 	<property name="password" value="active"/>
	 	<property name="defaultAutoCommit" value="false"></property>
	 </bean>
	 
	 <!-- Mybatis SqlSession 등록하기 -->
	 <bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
	 	<!-- mybatis-config.xml 설정 불러오기 -->
	 	<property name="configLocation" value="classpath:mybatis-config.xml"/>
	 	<property name="dataSource" ref="dataSource"/>
	 </bean>
	 <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	 	<constructor-arg ref="sqlSession"/>
	 </bean>
	 
	 <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource"/>   
   	</bean>
	 <tx:advice id="txAdvice" transaction-manager="transactionManager">
      <tx:attributes>
      <!-- 트랜잭션을 선언 할 메소드 및 트랜잭션 속성 설정
      	name : 적용 메소드 명시
      	read-only : 성능을 최적화 하기 위해 사용할수도 있고 특정 트랜잭션 작업 안에서 쓰기 작업이 일어나는 것을
      	의도적으로 방지하기 위해 사용. 일반적으로 읽기 전용 트랜잭션이 시작 된 후 DML 작업이 진행되면 예외 발생
      	rollback-for : 특정 예외가 발생 시 강제로 rollback -->
         <tx:method name="select*" read-only="true" rollback-for="Exception" />
         <tx:method name="insert*" rollback-for="Exception" />
         <tx:method name="update*" rollback-for="Exception" />
         <tx:method name="delete*" rollback-for="Exception" />
      </tx:attributes>
   	</tx:advice>
	 
	 <!-- 파일 업로드 관련 bean 등록 : MultipartResolver -->
	 <bean id="multipartResolver"
	 class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	 	<property name="maxUploadSize" value="100000000"/>
	 	<property name="maxInMemorySize" value="100000000"/>
	 </bean>
	 <bean id="mailSender" class ="org.springframework.mail.javamail.JavaMailSenderImpl" >
        <property name="host" value="smtp.gmail.com" />
        <property name="port" value="587" />
        <property name="defaultEncoding" value="utf-8"/>
        <property name="username" value="gjgjgjdudgus@gmail.com" />
        <property name="password" value="ef1624ce@@" />
        
        <!-- email 요청시는 SMTP -->

         <property name="javaMailProperties">
            <props>
               <prop key="mail.transport.protocol">smtp</prop>
               <prop key="mail.smtp.auth">true</prop>
               <prop key="mail.smtp.starttls.enable">true</prop>
               <prop key="mail.debug">true</prop>
            </props>
         </property>
      
    </bean>
	 
</beans>
